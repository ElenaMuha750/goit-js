/*
 * Array.prototype.reduce()
 * –ü–æ—ç–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á—Ç–æ —É–≥–æ–¥–Ω–æ ü§Ø
 * –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ, –Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ —Å —É–º–æ–º
 *
 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –∫–æ–ª–ª–±–µ–∫ (–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä, –ø–æ—Ç–æ—á–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∏–Ω–¥–µ–∫—Å, –º–∞—Å—Å–∏–≤)
 */

const numbers = [5, 10, 15, 20, 25];

// const total = numbers.reduce((acc, number) => {
//   console.log("number:", number);
//   console.log("acc:", acc);

//   return acc + number;
// }, 0);

// const total = numbers.reduce((acc, number) => acc + number, 0);
// console.log("total:", total);

// accumulator = 0 -> number = 5 -> return 0 + 5
// accumulator = 5 -> number = 10 -> return 5 + 10
// accumulator = 15 -> number = 15 -> return 15 + 15
// accumulator = 30 -> number = 20 -> return 30 + 20
// accumulator = 50 -> number = 25 -> return 50 + 25
// console.log(total);

// –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é –∑–∞—Ä–ø–ª–∞—Ç—É---------------------------

// const salary = {
//   mango: 100,
//   poly: 50,
//   ajax: 150,
// };

// const totalSalary = Object.values(salary).reduce(
//   (total, value) => total + value,
//   0
// );
// console.log(totalSalary);

// –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤--------------------------------

// const players = [
//   { id: "player-1", name: "Mango", timePlayed: 310, online: false },
//   { id: "player-2", name: "Poly", timePlayed: 470, online: true },
//   { id: "player-3", name: "Kiwi", timePlayed: 230, online: true },
//   { id: "player-4", name: "Ajax", timePlayed: 150, online: false },
//   { id: "player-5", name: "Chelsey", timePlayed: 80, online: true },
// ];

// const totalTimePlayed = players.reduce(
//   (totalTime, player) => totalTime + player.timePlayed,
//   0
// );
// console.log(totalTimePlayed);

// -----------------------------------------------------

// –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã

// const cart = [
//   { label: "Apples", price: 100, quantity: 2 },
//   { label: "Bananas", price: 120, quantity: 3 },
//   { label: "Lemons", price: 70, quantity: 4 },
// ];

// const totalAmount = cart.reduce(
//   (total, { price, quantity }) => total + price * quantity,
//   0
// );
// console.log(totalAmount);

// --------------------------------------------------------

const tweets = [
  { id: "000", likes: 5, tags: ["js", "nodejs"] },
  { id: "001", likes: 2, tags: ["html", "css"] },
  { id: "002", likes: 17, tags: ["html", "js", "nodejs"] },
  { id: "003", likes: 8, tags: ["css", "react"] },
  { id: "004", likes: 0, tags: ["js", "nodejs", "react"] },
];

// –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ —Ç–≤–∏—Ç–æ–≤

const allTags = tweets.reduce((acc, tweet) => [...acc, ...tweet.tags], []);
console.log(allTags);

// –í–µ–¥—ë–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤

// –ì—Ä—è–∑–Ω–∞—è –≤–µ—Ä—Å–∏—è, –º—É—Ç–∏—Ä—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥–µ—Ç –≤ acc----------

// const tagsStats = allTags.reduce((acc, tag) => {
//   console.log(acc);

//   if (acc[tag]) {
//     acc[tag] += 1;

//     return acc;
//   }

//   acc[tag] = 1;

//   return acc;
// }, {});

// –ß–∏—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è, –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—å–µ–∫—Ç-------------------

// const tagsStats = allTags.reduce((acc, tag) => {
//   console.log(acc);

//   if (acc[tag]) {
//     return {
//       ...acc,
//       [tag]: acc[tag] + 1,
//     };
//   }

//   return {
//     ...acc,
//     [tag]: 1,
//   };
// }, {});

// –¢–µ—Ä–Ω–∞—Ä–Ω–∏–∫-----------------------------------

const tagsStats = allTags.reduce((acc, tag) => {
  return {
    ...acc,
    [tag]: acc[tag] ? acc[tag] + 1 : 1,
  };
}, {});

console.log(tagsStats);

// –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —Å –∫–ª—é—á–æ–º tag –µ—Å—Ç—å, —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1
// –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–µ—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º, —á—Ç–æ –≤ tag, —Å–¥–µ–ª–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å 1

// ------------------------------------------------------------------

const user = {
  name: "Muha",
};

const key = "name";

console.log(user[key]); // Muha

// ---------------------------------------------------------------

/*
 * Reduce —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏
 */
// Array.prototype.reduce = function(callback, initialValue = this[0]) {
//   let accumulator = initialValue;

//   for (let i = 0; i < this.length; i += 1) {
//     accumulator = callback(accumulator, this[i], i, this);
//   }

//   return accumulator;
// };
