// 1. –©–æ —Ç–∞–∫–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å—É
// 2. –©–æ —Ç–∞–∫–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø
// 3. –Ø–∫ –±—É–ª–æ —Ä–∞–Ω—ñ—à–µ. –í —á–æ–º—É —Ä—ñ–∑–Ω–∏—Ü—è –≤—ñ–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º new —Ç–∞ –±–µ–∑ –Ω—å–æ–≥–æ
// 4. –í–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å

//====================== before ES6 ============================

// function User(name) {
//     console.log(this) // {}
//     this.name = name
//     // return this
// }

// User.prototype.setName = function(newName) {
//     this.name = newName
// }

// const user = new User("Denis")

// function AdminUser(name) {
//     User.call(this, name)

//     this.isAdmin = true
// }

// const admin = new AdminUser("Denis")
// console.log(admin)

// =======================  ES6 + ===============================

// class User {
//     constructor(name) {
//         this.name = name
//     }

//     setName(newName) {
//         this.name = newName
//     }
// }

// const user = new User("Denis")

// class AdminUser extends User {
//     constructor(name) {
//         super(name)
//         this.isAdmin = true
//     }
// }

// const admin = new AdminUser("Denis")
// console.log(admin)

//==================================================================

//  Example 1
// class Blogger {
//   constructor(settings) {
//     const { email, age, numberOfPosts = 0, topics = [] } = settings;

//     this.email = email;
//     this.age = age;
//     this.numberOfPosts = numberOfPosts;
//     this.topics = topics;
//   }

//   getInfo() {
//     const { email, age, numberOfPosts } = this;
//     return `User ${email} is ${age} years old and has ${numberOfPosts} posts`;
//   }

//   updatePostCount(num) {
//     this.numberOfPosts = num;
//   }
// }

// const mango = new Blogger({
//   email: 'mango@mail.com',
//   age: 24,
//   numberOfPosts: 20,
//   topics: ['tech', 'cooking'],
// });

// console.log(mango)
// console.log(mango.getInfo())
// mango.updatePostCount(10)
// console.log(mango.getInfo())

//==================================================================

//  Example 2
// class User {
//   #email;
//   #login;

//   constructor({ login, email }) {
//     this.#email = email;
//     this.#login = login;
//     this.logs = [];
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(login) {
//     this.#login = login;
//   }

//   get email() {
//     return this.#email;
//   }

//   set email(email) {
//     this.logs.push({ email, date: new Date() });
//     this.#email = email;
//   }

//   undo(step = 1) {}
// }

// const userMango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(userMango)
// userMango.email = "asdsa@dasd.com"
// userMango.email = "asdsa2@dasd.com"

//===============================================================

//  Example 3

// class Notes {
//   static Priority = {
//     LOW: 'low',
//     NORMAL: 'normal',
//     HIGH: 'high',
//   };

//   constructor(items) {
//     this.items = items;
//   }

//   addNote(payload) {
//     const note = {
//       id: this.#getItemId(),
//       priority: Notes.getDefaultPriority(),
//       ...payload,
//     };

//     this.items.push(note);
//   }

//   #getItemId() {
//     return this.items.length + 1;
//   }

//   static getDefaultPriority() {
//     return Notes.Priority.LOW;
//   }
// }

// const notes = new Notes([]);

// notes.addNote({ text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞', priority: Notes.Priority.NORMAL });
// notes.addNote({ text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞2', priority: Notes.Priority.LOW });
// console.log(notes);

//================================================================
// ## Example 1 - –ë–ª–æ–≥–≥–µ—Ä

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Blogger` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—å–µ–∫—Ç–∞ –±–ª–æ–≥–≥–µ—Ä–∞ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–≤–æ–π—Å—Ç–≤–∞–º–∏:

// - `email` - –ø–æ—á—Ç–∞, —Å—Ç—Ä–æ–∫–∞
// - `age` - –≤–æ–∑—Ä–∞—Å—Ç, —á–∏—Å–ª–æ
// - `numberOfPosts` - –∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤, —á–∏—Å–ª–æ
// - `topics` - –º–∞—Å—Å–∏–≤ —Ç–µ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±–ª–æ–≥–≥–µ—Ä

// –ö–ª–∞—Å—Å –æ–∂–∏–¥–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏.

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `getInfo()`, –∫–æ—Ç–æ—Ä—ã–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É:
// `User ${–ø–æ—á—Ç–∞} is ${–≤–æ–∑—Ä–∞—Å—Ç} years old and has ${–∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤} posts`.

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `updatePostCount(value)`, –∫–æ—Ç–æ—Ä—ã–π –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ `value` –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

// class Blogger {
//   constructor({ email, age, numberOfPosts = 0, topics = [] }) {
//     this.email = email;
//     this.age = age;
//     this.numberOfPosts = numberOfPosts;
//     this.topics = topics;
//   }

//   getInfo() {
//     const { email, age, numberOfPosts } = this;
//     return `User ${email} is ${age} years old and has ${numberOfPosts} posts`;
//   }

//   updatePostCount(num) {
//     this.numberOfPosts += num;
//   }
// }

// const mango = new Blogger({
//   email: 'mango@mail.com',
//   age: 24,
//   numberOfPosts: 20,
//   topics: ['tech', 'cooking'],
// });

// console.log(mango);
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 25 posts

// const poly = new Blogger({
//   email: 'poly@mail.com',
//   age: 19,
//   numberOfPosts: 17,
//   topics: ['sports', 'gaming', 'health'],
// });

// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 21 posts

//================================================================
// ## Example 2 - –•—Ä–∞–Ω–∏–ª–∏—â–µ

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Storage` –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä–æ–≤.
// –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤, –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å
// –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–æ `items`.

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞:

// - `getItems()` - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤.
// - `addItem(item)` - –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –∫ —Ç–µ–∫—É—â–∏–º.
// - `removeItem(item)` - –ø–æ–ª—É—á–∞–µ—Ç —Ç–æ–≤–∞—Ä –∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —Ç–µ–∫—É—â–∏—Ö.

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// const items = storage.getItems();
// console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

// storage.addItem('üçå');
// console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]

// class Storage {
//   constructor(items) {
//     this.items = items;
//   }

//   getItems() {
//     return this.items;
//   }

//   addItem(item) {
//     return this.items.push(item);
//   }

//   removeItem(itemToRemove) {
//     this.items = this.items.filter(item => item !== itemToRemove);
//   }

//   // –≤–∞—Ä–∏–∞–Ω—Ç 2

//   // removeItem(item) {
//   //   let index = this.items.indexOf(item);
//   //   if (index > -1) {
//   //     return this.items.splice(index, 1);
//   //   }
//   // }
// }

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// console.log(storage);

// const items = storage.getItems();
// console.table(items); // ['üçé', 'üçã', 'üçá', 'üçë']

// storage.addItem('üçå');
// console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.table(storage.items); //  [ 'üçé', 'üçá', 'üçë', 'üçå' ]

//============================================================
// ## Example 3 - User

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `User` –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ `login` –∏ `email`.
// –û–±—ä—è–≤–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ `#login` –∏ `#email`, –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ç–æ—Ä—ã–º —Å–¥–µ–ª–∞–π —á–µ—Ä–µ–∑
// –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä `login` –∏ `email`.

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// const poly = new User({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie

//-----------------------------------------

// class User {
//   #email;
//   #login;

//   constructor({ login, email }) {
//     this.#login = login;
//     this.#email = email;
//   }

//   get email() {
//     return this.#email;
//   }

//   set email(email) {
//     this.#email = email;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(login) {
//     this.#login = login;
//   }
// }

// const userMango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(userMango);

// console.log(userMango.login); // Mango
// userMango.login = 'Mangodoge';
// console.log(userMango.login); // Mangodoge

//============================================================

// ## Example 4 - –ó–∞–º–µ—Ç–∫–∏

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Notes` –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∑–∞–º–µ—Ç–æ–∫ –≤ —Å–≤–æ–π—Å—Ç–≤–µ `items`.
// –ó–∞–º–µ—Ç–∫–∞ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ `text` –∏ `priority`. –î–æ–±–∞–≤—å –∫–ª–∞—Å—Å—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ
// —Å–≤–æ–π—Å—Ç–≤–æ `Priority`, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

// {
//   LOW: 'low',
//   NORMAL: 'normal',
//   HIGH: 'high'
// }

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã `addNote(note)`, `removeNote(text)` –∏
// `updatePriority(text, newPriority)`.

// const myNotes = new Notes([]);

// myNotes.addNote({ text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞', priority: Notes.Priority.LOW });
// console.log(myNotes.items);

// myNotes.addNote({
//   text: '–ú–æ—è –≤—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞',
//   priority: Notes.Priority.NORMAL,
// });
// console.log(myNotes.items);

// myNotes.removeNote('–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞');
// console.log(myNotes.items);

// myNotes.updateNote('–ú–æ—è –≤—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞', Notes.Priority.HIGH);
// console.log(myNotes.items);
//-------------------------------------

// class Notes {
//   static Priority = {
//     LOW: 'low',
//     NORMAL: 'normal',
//     HIGH: 'high',
//   };

//   constructor(items) {
//     this.items = items;
//   }

//   addNote(payLoad) {
//     const note = {
//       id: this.items.length + 1,
//       ...payLoad,
//     };

//     this.items.push(note);
//   }
// }

// const notes = new Notes([]);

// notes.addNote({
//   text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞',
//   priority: Notes.Priority.LOW,
// });
// console.log(notes.items);

// console.log(notes);
//=====================================================

// const weight = 80;
// const c = 300000000;
const c = 300000000;
const energy = weight => weight * c ** 2;

console.log(energy(80));
